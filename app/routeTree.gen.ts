/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as toolsConvertersNumberBaseImport } from './routes/(tools)/converters/number-base'
import { Route as toolsConvertersJsonYamlImport } from './routes/(tools)/converters/json-yaml'
import { Route as toolsConvertersJsonArrayToTableImport } from './routes/(tools)/converters/json-array-to-table'
import { Route as toolsConvertersDateImport } from './routes/(tools)/converters/date'
import { Route as toolsConvertersCronParserImport } from './routes/(tools)/converters/cron-parser'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const toolsConvertersNumberBaseRoute = toolsConvertersNumberBaseImport.update({
  id: '/(tools)/converters/number-base',
  path: '/converters/number-base',
  getParentRoute: () => rootRoute,
} as any)

const toolsConvertersJsonYamlRoute = toolsConvertersJsonYamlImport.update({
  id: '/(tools)/converters/json-yaml',
  path: '/converters/json-yaml',
  getParentRoute: () => rootRoute,
} as any)

const toolsConvertersJsonArrayToTableRoute =
  toolsConvertersJsonArrayToTableImport.update({
    id: '/(tools)/converters/json-array-to-table',
    path: '/converters/json-array-to-table',
    getParentRoute: () => rootRoute,
  } as any)

const toolsConvertersDateRoute = toolsConvertersDateImport.update({
  id: '/(tools)/converters/date',
  path: '/converters/date',
  getParentRoute: () => rootRoute,
} as any)

const toolsConvertersCronParserRoute = toolsConvertersCronParserImport.update({
  id: '/(tools)/converters/cron-parser',
  path: '/converters/cron-parser',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(tools)/converters/cron-parser': {
      id: '/(tools)/converters/cron-parser'
      path: '/converters/cron-parser'
      fullPath: '/converters/cron-parser'
      preLoaderRoute: typeof toolsConvertersCronParserImport
      parentRoute: typeof rootRoute
    }
    '/(tools)/converters/date': {
      id: '/(tools)/converters/date'
      path: '/converters/date'
      fullPath: '/converters/date'
      preLoaderRoute: typeof toolsConvertersDateImport
      parentRoute: typeof rootRoute
    }
    '/(tools)/converters/json-array-to-table': {
      id: '/(tools)/converters/json-array-to-table'
      path: '/converters/json-array-to-table'
      fullPath: '/converters/json-array-to-table'
      preLoaderRoute: typeof toolsConvertersJsonArrayToTableImport
      parentRoute: typeof rootRoute
    }
    '/(tools)/converters/json-yaml': {
      id: '/(tools)/converters/json-yaml'
      path: '/converters/json-yaml'
      fullPath: '/converters/json-yaml'
      preLoaderRoute: typeof toolsConvertersJsonYamlImport
      parentRoute: typeof rootRoute
    }
    '/(tools)/converters/number-base': {
      id: '/(tools)/converters/number-base'
      path: '/converters/number-base'
      fullPath: '/converters/number-base'
      preLoaderRoute: typeof toolsConvertersNumberBaseImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/converters/cron-parser': typeof toolsConvertersCronParserRoute
  '/converters/date': typeof toolsConvertersDateRoute
  '/converters/json-array-to-table': typeof toolsConvertersJsonArrayToTableRoute
  '/converters/json-yaml': typeof toolsConvertersJsonYamlRoute
  '/converters/number-base': typeof toolsConvertersNumberBaseRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/converters/cron-parser': typeof toolsConvertersCronParserRoute
  '/converters/date': typeof toolsConvertersDateRoute
  '/converters/json-array-to-table': typeof toolsConvertersJsonArrayToTableRoute
  '/converters/json-yaml': typeof toolsConvertersJsonYamlRoute
  '/converters/number-base': typeof toolsConvertersNumberBaseRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(tools)/converters/cron-parser': typeof toolsConvertersCronParserRoute
  '/(tools)/converters/date': typeof toolsConvertersDateRoute
  '/(tools)/converters/json-array-to-table': typeof toolsConvertersJsonArrayToTableRoute
  '/(tools)/converters/json-yaml': typeof toolsConvertersJsonYamlRoute
  '/(tools)/converters/number-base': typeof toolsConvertersNumberBaseRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/converters/cron-parser'
    | '/converters/date'
    | '/converters/json-array-to-table'
    | '/converters/json-yaml'
    | '/converters/number-base'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/converters/cron-parser'
    | '/converters/date'
    | '/converters/json-array-to-table'
    | '/converters/json-yaml'
    | '/converters/number-base'
  id:
    | '__root__'
    | '/'
    | '/(tools)/converters/cron-parser'
    | '/(tools)/converters/date'
    | '/(tools)/converters/json-array-to-table'
    | '/(tools)/converters/json-yaml'
    | '/(tools)/converters/number-base'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  toolsConvertersCronParserRoute: typeof toolsConvertersCronParserRoute
  toolsConvertersDateRoute: typeof toolsConvertersDateRoute
  toolsConvertersJsonArrayToTableRoute: typeof toolsConvertersJsonArrayToTableRoute
  toolsConvertersJsonYamlRoute: typeof toolsConvertersJsonYamlRoute
  toolsConvertersNumberBaseRoute: typeof toolsConvertersNumberBaseRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  toolsConvertersCronParserRoute: toolsConvertersCronParserRoute,
  toolsConvertersDateRoute: toolsConvertersDateRoute,
  toolsConvertersJsonArrayToTableRoute: toolsConvertersJsonArrayToTableRoute,
  toolsConvertersJsonYamlRoute: toolsConvertersJsonYamlRoute,
  toolsConvertersNumberBaseRoute: toolsConvertersNumberBaseRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(tools)/converters/cron-parser",
        "/(tools)/converters/date",
        "/(tools)/converters/json-array-to-table",
        "/(tools)/converters/json-yaml",
        "/(tools)/converters/number-base"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(tools)/converters/cron-parser": {
      "filePath": "(tools)/converters/cron-parser.tsx"
    },
    "/(tools)/converters/date": {
      "filePath": "(tools)/converters/date.tsx"
    },
    "/(tools)/converters/json-array-to-table": {
      "filePath": "(tools)/converters/json-array-to-table.tsx"
    },
    "/(tools)/converters/json-yaml": {
      "filePath": "(tools)/converters/json-yaml.tsx"
    },
    "/(tools)/converters/number-base": {
      "filePath": "(tools)/converters/number-base.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
